/*
global.scss
*/

//------------------------------------------------//
//------------------- IMPORTS --------------------//
//------------------------------------------------//

$grid-columns: 24 !default;
$grid-gutter-width: 15px !default;
$grid-breakpoints: (
	xs: 0,
	sm: 768px,
	md: 992px,
	lg: 1200px,
	xl: 1440px
);

@import "../node_modules/bootstrap/scss/bootstrap";

//------------------------------------------------//
//-------------------- COLORS --------------------//
//------------------------------------------------//

// Basic Colors...
$white: #FFFFFF;
$black: #000000;

// Global Traveler Colors...
$dkblue: #12222D;
$header-backcolor: $white;
$burgermenu-color: $dkblue;
$global-gray: #9FACBD;
$red: #F46E5D;
$blue: #3FA2DA;
$tagline: $blue;
$global-green: #108751;





$dk-gray: #414042;
$border-lines: #BECED3;
$light-blue: #25AECC;  /* default link color */
$border-color: #D6E3E8;
$offblue: #F0F5F7;


$gray: #C0BBBD;
$default: $dkblue; // #1F163E Default text color and background color of some sections.
$green: #2CB78F; // Used for Links and underlines
$orange: #EEB538; // Used for background color of headlines, and search icon...
$purple: #8A7399;
$ltpurple: #B4A5BE;
$menuborder: #484C5B;
$border-gray: #E6E7E8;

$social-color: #D0D2D3;

$fa-share: #3B5998;
$tw-share: #08A0E9;
$li-share: #0077B5;

//------------------------------------------------//
//--------------------- FONTS --------------------//
//------------------------------------------------//

@font-face {
  font-family: "Noe Display Bold";
  src: 	url("../fonts/Noe-Display-Bold.woff") format("woff"), url("../fonts/Noe-Display-Bold.otf") format("opentype");
}

@mixin font($type: font_1, $style: null) {
	
	@extend %#{$type};
	@if ($style) {
		@if ($style == regular) {
			font-weight: 400;
			font-style: normal;
		} @elseif ($style == bold) {
			font-weight: 700;
			font-style: normal;
		}
	}
}

%font_1 {
	font-family: brandon-grotesque,sans-serif;
	font-style: normal;
}
%font-2 {
	font-family: "Noe Display Bold", sans-serif;
	font-style: normal;
}

%font-regular {
	@include font(font_1, regular);
	font-size: 16px;
}

%font-medium {
	@include font(font_1, bold);
	font-size: 12px;
	line-height: 18px;
	letter-spacing: 1.2px;
}

%font-menu {
	@include font(font_1, bold);
	letter-spacing: .1em;
	font-size: 10px;
	text-transform: uppercase;
}

%font-bold {
	@include font(font_1, bold);
	font-size: 16px;
	line-height: 2em;
}


//-------------------------------------------------//
//------------------ SASS MIXINS ------------------//
//-------------------------------------------------//

@mixin appearance ($value: none) {
	-webkit-appearance: $value;
   -moz-appearance:    $value;
   appearance:         $value;
}
@mixin text-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: $string;
}
@mixin box-shadow ($string) {
	-webkit-box-shadow: $string;
	-moz-box-shadow:    $string;
	box-shadow:         $string;
}
@mixin vertical-align ($position: null) {

	@if ($position) {
		position: $position;
	}
	top: 50%;
	-webkit-transform: translateY(-50%);
	-moz-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}
@mixin centerThis($position: absolute) {
	position: $position;
	top: 50%;
	left: 50%;
	-webkit-transform: translate(-50%, -50%);
	-moz-transform: translate(-50%, -50%);
	-ms-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
}
@mixin drop-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
	-webkit-box-shadow:	$x $y $blur $spread rgba(0, 0, 0, $alpha);
	-moz-box-shadow:	$x $y $blur $spread rgba(0, 0, 0, $alpha);
	box-shadow:		$x $y $blur $spread rgba(0, 0, 0, $alpha);
}
@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
	-webkit-box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
	-moz-box-shadow:    inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
	box-shadow:         inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin box-sizing ($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	box-sizing:         $type;
}

@mixin border-radius ($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius:    $radius;
	border-radius:         $radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}
@mixin border-radiuses ($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
	-webkit-border-top-right-radius:    $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius:  $bottomleft;
	-webkit-border-top-left-radius:     $topleft;

	-moz-border-radius-topright:        $topright;
	-moz-border-radius-bottomright:     $bottomright;
	-moz-border-radius-bottomleft:      $bottomleft;
	-moz-border-radius-topleft:         $topleft;

	border-top-right-radius:            $topright;
	border-bottom-right-radius:         $bottomright;
	border-bottom-left-radius:          $bottomleft;
	border-top-left-radius:             $topleft;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

@mixin opacity ($opacity: 0.5) {
	-webkit-opacity: 	$opacity;
	-moz-opacity: 		$opacity;
	opacity: 		$opacity;
	$msopacity: ($opacity * 100);
	filter: alpha(opacity=$msopacity) progid:DXImageTransform.Microsoft.Alpha(opacity=$msopacity) ;
}

@mixin gradient ($startColor: #eee, $endColor: white) {
	background-color: $startColor;
	background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
	background: -webkit-linear-gradient(top, $startColor, $endColor);
	background: -moz-linear-gradient(top, $startColor, $endColor);
	background: -ms-linear-gradient(top, $startColor, $endColor);
	background: -o-linear-gradient(top, $startColor, $endColor);
}
@mixin horizontal-gradient ($startColor: #eee, $endColor: white) {
 	background-color: $startColor;
	background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
	background-image: -webkit-linear-gradient(left, $startColor, $endColor);
	background-image: -moz-linear-gradient(left, $startColor, $endColor);
	background-image: -ms-linear-gradient(left, $startColor, $endColor);
	background-image: -o-linear-gradient(left, $startColor, $endColor);
}

@mixin animation ($name, $duration: 300ms, $delay: 0, $ease: ease) {
	-webkit-animation: $name $duration $delay $ease;
	-moz-animation:    $name $duration $delay $ease;
	-ms-animation:     $name $duration $delay $ease;
}

@mixin transition ($transition) {
	// This cannot take multiple items
	-webkit-transition: $transition;
	-moz-transition:    $transition;
	-ms-transition:     $transition;
	-o-transition:      $transition;
}
@mixin transform($string){
	-webkit-transform: $string;
	-moz-transform: 	 $string;
	-ms-transform: 		 $string;
	-o-transform: 		 $string;
	transform:			$string;
}
@mixin scale ($factor) {
	-webkit-transform: scale($factor);
	-moz-transform: 	 scale($factor);
	-ms-transform: 		 scale($factor);
	-o-transform: 		 scale($factor);
	transform:			scale($factor);
}
@mixin scaleX ($factor) {
	-webkit-transform: scaleX($factor);
	-moz-transform: 	 scaleX($factor);
	-ms-transform: 		 scaleX($factor);
	-o-transform: 		 scaleX($factor);
	transform:			scaleX($factor);
}
@mixin rotate ($deg) {
	-webkit-transform: rotate($deg);
	-moz-transform: 	 rotate($deg);
	-ms-transform: 		 rotate($deg);
	-o-transform: 		 rotate($deg);
	transform:			rotate($deg);
}
@mixin skew ($deg, $deg2) {
	-webkit-transform:       skew($deg, $deg2);
	-moz-transform: 	 skew($deg, $deg2);
	-ms-transform: 		 skew($deg, $deg2);
	-o-transform: 		 skew($deg, $deg2);
}
@mixin translate ($x, $y:0) {
	-webkit-transform:       translate($x, $y);
	-moz-transform: 	 translate($x, $y);
	-ms-transform: 		 translate($x, $y);
	-o-transform: 		 translate($x, $y);
}
@mixin translate3d ($x, $y: 0, $z: 0) {
	-webkit-transform:       translate3d($x, $y, $z);
	-moz-transform: 	 translate3d($x, $y, $z);
	-ms-transform: 		 translate3d($x, $y, $z);
	-o-transform: 		 translate3d($x, $y, $z);
}
@mixin perspective ($value: 1000) {
	-webkit-perspective: 	$value;
	-moz-perspective: 	$value;
	-ms-perspective: 	$value;
	perspective: 		$value;
}
@mixin transform-origin ($x:center, $y:center) {
	-webkit-transform-origin: $x $y;
	-moz-transform-origin:    $x $y;
	-ms-transform-origin:     $x $y;
	-o-transform-origin:      $x $y;
}

@mixin fontsmoothing($type: antialiased) {

	@if ($type == antialiased) {
		-webkit-font-smoothing: $type;
		-moz-osx-font-smoothing: grayscale;
	} @else {
		-webkit-font-smoothing: $type;
		-moz-osx-font-smoothing: $type;
	}
}

@mixin appearance ($value: none) {
	-webkit-appearance: $value;
   -moz-appearance:    $value;
   appearance:         $value;
}

%font-smoothing {
	@include fontsmoothing(auto);
}

//------------------------------------------------//
//----------------- CUSTOM MIXINS ----------------//
//------------------------------------------------//

@function ratio($width, $height) {
	@return percentage($height / $width);
}

@mixin generateRatios($width: 4, $height: 3, $prefix: "ratio-") {
  $class-name: $prefix + $width + "x" + $height;
 
  &.#{$class-name} {
    padding-bottom: ratio($width, $height);
  }
}

@mixin video($aspect-width: 16, $aspect-height: 9) {
	&.video {
		position: relative;
		padding-top: 35px;
		height: 0;
		overflow: hidden;
		iframe, > * {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			@if ($aspect-width == 16 and $aspect-height == 9) {
			height: 100%;
			}
		}
		@include generateRatios($aspect-width, $aspect-height);
	}
}

@mixin border-link($back-color: #FFFFFF, $border-color: #DC3545, $ele: null, $include-hover: true, $class-name: null, $ele-class: null, $line-size: 1px, $back-pos: 88%) {
	a {
		@if ($class-name) {
			&.#{$class-name} {
				@if ($include-hover == true) {
					&:hover {
						@if ($ele) {
							@if ($ele-class) {
								#{$ele} {
									&.#{$ele-class} {
									    background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

									    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
									    background-size: 0 $line-size, 0 $line-size,$line-size $line-size;
									    background-repeat: no-repeat,no-repeat,repeat-x;
									    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
									    background-position: 100% $back-pos, 100% $back-pos;
									}
								}
							} @else {
								#{$ele} {
								    background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

								    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
								    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
								    background-repeat: no-repeat,no-repeat,repeat-x;
								    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
								    background-position: 100% $back-pos, 100% $back-pos;
								}
							}
						} @else {
							background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));
						    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
						    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
						    background-repeat: no-repeat,no-repeat,repeat-x;
						    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
						    background-position: 100% $back-pos, 100% $back-pos;
						}
					}
				} @else {
					@if ($ele) {
						@if ($ele-class) {
							#{$ele} {
								&.#{$ele-class} {
									background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

								    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
								    background-size: .05em $line-size,.05em $line-size,$line-size $line-size;
								    background-repeat: no-repeat,no-repeat,repeat-x;
								    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
								    background-position: 100% $back-pos, 100% $back-pos;
								}
							}
						} @else {
							#{$ele} {
							    background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

							    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
							    background-size: .05em $line-size,.05em $line-size,$line-size $line-size;
							    background-repeat: no-repeat,no-repeat,repeat-x;
							    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
							    background-position: 100% $back-pos, 100% $back-pos;
							}
						}
					} @else {
						background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

					    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
					    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
					    background-repeat: no-repeat,no-repeat,repeat-x;
					    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
					    background-position: 100% $back-pos, 100% $back-pos;
					}
				}
				@if ($ele) {

					@if ($ele-class) {
						#{$ele} {
							&.#{$ele-class} {
								display: inline;
								position: relative;
								@if ($include-hover == true) {
								background-position: 0 $back-pos, 0 $back-pos;
								background-size: $back-pos $line-size;
								}
								@include transition(background-size 0.3s);
							}
						}
					} @else {
						#{$ele} {
							display: inline;
							position: relative;
							@if ($include-hover == true) {
							background-position: 0 $back-pos, 0 $back-pos;
							background-size: $back-pos $line-size;
							}
							@include transition(background-size 0.3s);
						}
					}
				}
			}
		} @else {
			@if ($include-hover == true) {
				&:hover {
					@if ($ele) {
						@if ($ele-class) {
							#{$ele} {
								&.#{$ele-class} {
									background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

								    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
								    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
								    background-repeat: no-repeat,no-repeat,repeat-x;
								    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
								    background-position: 100% $back-pos, 100% $back-pos;
								}
							}
						} @else {
							#{$ele} {
							    background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

							    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
							    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
							    background-repeat: no-repeat,no-repeat,repeat-x;
							    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
							    background-position: 100% $back-pos, 100% $back-pos;
							}
						}
					} @else {
						background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

					    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
					    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
					    background-repeat: no-repeat,no-repeat,repeat-x;
					    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
					    background-position: 100% $back-pos, 100% $back-pos;
					}
				}
			} @else {
				@if ($ele) {

					@if ($ele-class) {
						#{$ele} {
							&.#{$ele-class} {
								background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

							    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
							    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
							    background-repeat: no-repeat,no-repeat,repeat-x;
							    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
							    background-position: 100% $back-pos, 100% $back-pos;
							}
						}
					} @else {
						#{$ele} {
						    background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

						    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
						    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
						    background-repeat: no-repeat,no-repeat,repeat-x;
						    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
						    background-position: 100% $back-pos, 100% $back-pos;
						}
					}
				} @else {
					background: -webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($back-color),to($back-color)),-webkit-gradient(linear,left top,left bottom,from($border-color),to($border-color));

				    background: linear-gradient($back-color, $back-color),linear-gradient($back-color, $back-color),linear-gradient($border-color,$border-color);
				    background-size: 0 $line-size,0 $line-size,$line-size $line-size;
				    background-repeat: no-repeat,no-repeat,repeat-x;
				    text-shadow: 0.03em 0 $back-color, -0.03em 0 $back-color, 0 0.03em $back-color, 0 -0.03em $back-color, 0.06em 0 $back-color, -0.06em 0 $back-color, 0.09em 0 $back-color, -0.09em 0 $back-color, 0.12em 0 $back-color, -0.12em 0 $back-color, 0.15em 0 $back-color, -0.15em 0 $back-color;
				    background-position: 100% $back-pos, 100% $back-pos;
				}
			}
			@if ($ele) {

				@if ($ele-class) {
					#{$ele} {
						&.#{$ele-class} {
							display: inline;
							position: relative;
							@if ($include-hover == true) {
							background-position: 0 $back-pos, 0 $back-pos;
							background-size: $back-pos $line-size;
							}
							@include transition(background-size 0.3s);
						}
					}
				} @else {
					#{$ele} {
						display: inline;
						position: relative;
						@if ($include-hover == true) {
						background-position: 0 $back-pos, 0 $back-pos;
						background-size: $back-pos $line-size;
						}
						@include transition(background-size 0.3s);
					}
				}
			}
		}
	}
}

@mixin multiLineEllipsis($lineHeight: 1.5em, $lineCount: 7, $bgColor: $white){
  overflow: hidden;
  position: relative;
  line-height: $lineHeight;
  max-height: $lineHeight * $lineCount; 
  text-align: justify;
  margin-right: -1em;
  padding-right: 1em;
  &:before {
    content: '...';
    position: absolute;
    right: 0;
    bottom: 0;
  }
  &:after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    background: $bgColor;
  }
}

// Site Specific MIXINS

@mixin topline_links()
{
	a {
		color: $white;
		&:hover {
			color: $white;
			background-color: $blue;
		}
	}
	// Need to attach to hover effect.
	&.external-link {
		&:hover {
			a {
				background-color: $blue;
			}
		}
		&.active {
			a {
				color: $white;
				background-color: $blue;
			}
		}
	}
}

@mixin global_social_links()
{
	color: $global-gray;
	&:hover {
		color: $blue;
	}
	&.search-link {
		color: $red;
		&:hover {
			color: $red;
		}
	}
}


/**************************************
	START OF CUSTOM THEME WORK
**************************************/
h2 {
	@extend %font-2;
	font-size: 40px;
	line-height: 1em;
}

h3 {
	@extend %font-2;
	&.blue {
		color: $blue;
	}
}
h5 {
	@extend %font-medium;
	&.categories {
		color: $green;
		padding: 6px 18px 2px;
		&.highlight {
			// background-color: $purple;
			a {
				color: $default;
				&:hover {
					color: $light-blue;
				}
			}
		}
	}
}

.header-1 {
	.topline {
		> .inner-wrapper {
    		background-color: $dkblue;
    	}
		.site-section {
			background-color: $white;
			.posts-api-wrapper {
				.post-box {
					.copy {
						a {
							span {
								&.text {
									color: $dkblue;
									@include transition(all 0.3s ease);
								}
							}
							&:hover {
								span {
									&.text {
										color: $blue;
									}
								}
							}
						}

						h3 {
							&.title {
								a {
									display: block;
									color: $default;
									margin: 0;
									@extend %font-2;
									font-size: 24px;
									line-height: 1.2em;
									text-transform: initial;
									text-align: center;
									letter-spacing: normal;
								}
							}
						}
					}
					.img-wrapper {
						&:hover {
							&+.copy {
								a {
									span {
										&.text {
											color: $blue;
										}
									}
								}
							}
						}
					}
				}
				a {
					&:hover {
						color: $default;
					}
				}
				ul {
					&.categories {
						li {
							a {
								color: $global-gray;
								&:hover {
									color: $blue;
									.title {
										color: $blue;
									}
								}
								@include transition(all 0.2s ease);
							}
						}
					}
				}
			}
		}
	}
}

.navbar {
	background-color: $white;
	&.sticky-nav {
		background-color: $white;
	}
}

.site-section {
	color: $default;
	background-color: $white;
}

#mainMenu {
	background-color: $white;
	#main_navigation {
		li {
			a {
				color: $white;
				@include font(font_1, bold);
				font-size: 18px;
				&:hover {
					color: $red;
				}
			}
		}
		> li {
			&.dropdown {
				&.show {
					    border-top: 2px solid $default;
					> a {
						background-color: $blue;
						color: $default;
						span {
							&.caret-arrow {
								&:before, &:after {
									border-color: $default;
								}
							}
						}
					}
				}
			}
			&.social-buttons {
				padding: 0 1rem;
				> ul {
					.social-media {
						> a {
							color: $white;
							&:hover {
								color: $red;
							}
						}
					}
				}
			}
			&.social-buttons, &.copyright, &.get-the-app {
				background-color: $black;
			}
			&.get-the-app {
				h4 {
					color: $blue;
				}
			}
			&.copyright {
				padding: 0 1rem 3rem;
				color : $white;
				> p {
					line-height: 1em;
				}
				a {
					&.privacy-policy {
						color: $white;
						span {
							&:before {
								background-color: $white;
							}
						}
					}
				}
			}
			> a {
				color: $global-gray;
				@include font(font_1, bold);
				&:hover {
					color: $default;
				}
			}
		}
		ul {
			&.dropdown-menu {
				margin-top: 0;
				background-color: $default;
			}
		}
		.dropdown-toggle {
			span {
				&.caret-arrow {
					&:before, &:after {
						border-bottom: 12px solid $blue;
					}
				}
			}
			&:hover {
				span {
					&.caret-arrow {
						&:before, &:after {
							border-color: $default;
						}
					}
				}
			}
		}
	}
}

.tif-search-modal {
	.modal-dialog {
		.modal-header {
			background-color: $red;
			input {
				&[type="text"] {
					font-size: 60px;
				}
			}
		}
	}
	.form-wrapper {
		span {
			&.underline {
				font-size: 60px;
				border-color: $dkblue;
			}
		}
	}
}

#home-content, #main-content {
	.post-half {
		.copy {
			margin: -45px auto 0;
			a {
				span {
					&.text {
						color: $default;
						@include transition(all 0.3s ease);
					}
				}
				&:hover {
					span {
						&.text {
							color: $light-blue;
						}
					}
				}
				&.post {
					span {
						padding: 10px 15px;
					}
				}
			}
		}
		.img-wrapper {
			&:hover {
				&+.copy {
					a {
						span {
							&.text {
								color: $light-blue;
							}
						}
					}
				}
			}
		}
	}
	.post-grid {
		&.row {
			.post-tall {
				.copy {
					a {
						span {
							&.text {
								color: $default;
								@include transition(all 0.3s ease);
							}
						}
						&:hover {
							span {
								&.text {
									color: $light-blue;
								}
							}
						}
					}
					.title {
						a {
							&.post {
								span {
									padding: 6px 0 2px;
								}
							}
						}
					}
				}
				.img-wrapper {
					&:hover {
						&+.copy {
							a {
								span {
									&.text {
										color: $light-blue;
									}
								}
							}
						}
					}
				}
			}
		}
	}
	.post-list {
		.post-wide {
			.copy {
				a {
					span {
						&.text {
							color: $default;
							@include transition(all 0.3s ease);
						}
					}
					&:hover {
						span {
							&.text {
								color: $light-blue;
							}
						}
					}
				}
			}
			.img-wrapper {
				&:hover {
					&+.copy {
						a {
							span {
								&.text {
									color: $light-blue;
								}
							}
						}
					}
				}
			}
		}
	}
	.hero-header {
		.hero-body {
			#hero-content {
				.desc-wrapper {
					a {
						span {
							&.text {
								color: $default;
								@include transition(all 0.3s ease);
							}
						}
						&:hover {
							span {
								&.text {
									color: $light-blue;
								}
							}
						}
					}
					.desc-inner {
						p {
							@extend %font-bold;
							color: $white;
						}
					}
				}
				.image-wrapper {
					&:hover {
						&+.desc-wrapper {
							a {
								span {
									&.text {
										color: $light-blue;
									}
								}
							}
						}
					}
				}
			}
			.caption {
				p {
					color: $white;
					@extend %font-medium;
					@include opacity(0.7);
				}
			}
			.caption-post {
				p {
					color: $white;
					@extend %font-medium;
					@include opacity(0.7);
				}
			}
		}
		.headline {
			background-color: $purple;
		}
	}
	#content {
		#instagram-feed {
			background-color: $green;
			a {
				&.insta-feed {
					color: $white;
					font-size: 16px;
					@include opacity(0.8);
					span {
						@extend %font-medium;
					}
					&:hover {
						@include opacity(1);
					}
				}
			}
			#instagram-inner {
				a {
					&.instagram-link {
						&:before {
							@include gradient(transparent, $black);
							@include opacity(.8);
						}
						.likes {
							@extend %font-medium;
							color: $white;
						}
					}
				}
			}
		}
		#posts-section {
			#social-share {
				color: $social-color;

				.social-title {
					@extend %font-medium;
					text-transform: uppercase;
					font-size: 10px;
					line-height: 1.8em;
					color: $social-color;
				}
				a {
					color: $social-color;
					&:hover {
						color: $green;

						i {
							&.fa-facebook-f {
								color: darken($fa-share, 10%);
							}
							&.fa-twitter {
								color: darken($tw-share, 10%);
							}
							&.fa-linkedin {
								color: darken($li-share, 10%);
							}
						}
					}
					i {
						&.fa-facebook-f {
							color: $fa-share;
						}
						&.fa-twitter {
							color: $tw-share;
						}
						&.fa-linkedin {
							color: $li-share;
						}
					}
				}
			}
			#body-content {
				a {
					color: $green;
					border-bottom: 2px solid $green;
				}
			}
		}
		.post-item {
			.copy {
				.content {
					a {
						color: $light-blue;
						border-bottom: none;
						&:hover {
							color: darken($light-blue, 5%);
						}
					}
				}
			}
		}
	}
}

#main-content {
	.hero-header {
		.hero-body {
			.post-wrapper {
				.overlay {
					p {
						@extend %font-regular;
						line-height: 2em;
						color: $white;
					}
					.date {
						text-transform: uppercase;
						@extend %font-medium;
						color: $white;
					}

					a {
						span {
							&.text {
								color: $default;
								@include transition(all 0.3s ease);
							}
						}
						&:hover {
							span {
								&.text {
									color: $light-blue;
								}
							}
						}
					}
				}
			}
		}
	}
}

.recent-posts-wrapper {
	#featured {
		.innerbox {
			a {
				span {
					&.text {
						color: $default;
						@include transition(all 0.3s ease);
					}
				}
				&:hover {
					span {
						&.text {
							color: $light-blue;
						}
					}
				}
			}
		}
		.img-wrapper {
			&:hover {
				&+.innerbox {
					a {
						span {
							&.text {
								color: $light-blue;
							}
						}
					}
				}
			}
		}
	}
	.right-side {
		> h3 {
			padding: 0 15px;
		}
		a {
			span {
				&.text {
					color: $default;
					@include transition(all 0.3s ease);
				}
			}
			&:hover {
				span {
					&.text {
						color: $light-blue;
					}
				}
			}
		}

		h5 {
			padding: 0 15px;
			a {
				color: $light-blue;
			}
		}
	}
}

body {
	&.search {
		#main-content {
			.hero-header {
				.headline {
					background-color: $orange;
				}
			}
		}
	}
	&.tag {
		#main-content {
			.hero-header {
				.headline {
					background-color: $green;
				}
			}
		}
	}
	&.page {
		#main-content {
			#content {
				.content {
					a {
						color: $green;
						border-bottom: 2px solid $green;

						&:hover {
							color: $green;
						}
					}
				}
			}
		}
	}
}

@media (min-width: 992px) {
	#home-content, #main-content {
		.hero-header {
			.hero-body {
				.caption {
					position: absolute;
					text-shadow: 1px 1px 0 black;
					bottom: 6.5rem;
					left: 0;
					right: 0;
					margin: auto;
					p {
						color: $white;
					}
				}
			}
		}
	}
}

@import "style.scss";